{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","robot","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","console","log","children","style","overflow","border","height","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACzB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BL,EAA1B,mBAClB,gCACC,6BAAKC,IACL,4BAAIC,WCSOI,EAdE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACC,8BAEEA,EAAOC,KAAI,SAACC,EAAOC,GAClB,OACC,cAAC,EAAD,CAAcV,GAAIO,EAAOG,GAAGV,GAAIC,KAAMM,EAAOG,GAAGT,KAAMC,MAAOK,EAAOG,GAAGR,OAA5DQ,SCQFC,EAfG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACpB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,cACZC,SAAUH,OCEEI,G,MATA,SAACC,GAEf,OADAC,QAAQC,IAAIF,EAAMG,UAEjB,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACEP,EAAMG,aCuBKK,E,kDAxBd,WAAYR,GAAQ,IAAD,8BAClB,gBACKS,MAAQ,CAAEC,UAAS,GAFN,E,qDAKnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAG3B,WACC,OAA4B,IAAxBG,KAAKJ,MAAMC,SAEbG,KAAKb,MAAMG,SAGL,6C,GAjBiBY,aCuEZC,E,kDAvDd,aAAe,IAAD,8BACb,gBAODC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,QAC1CpB,QAAQC,IAAIgB,EAAME,OAAOC,QARzB,EAAKZ,MAAQ,CACZnB,OAAQ,GACR6B,YAAa,IAJD,E,qDAad,WAAqB,IAAD,OACnBG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKZ,SAAS,CAAExB,OAAQoC,S,oBAGxC,WAAU,IAAD,OAOFC,EAAiBd,KAAKJ,MAAMnB,OAAOsC,QAAO,SAAApC,GAC/C,OAAOA,EAAMR,KAAK6C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAGjE,OAAiC,IAA7BhB,KAAKJ,MAAMnB,OAAOyC,OAEpB,sBAAK7C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAckB,KAAKI,iBAC9B,4CAKD,sBAAK/B,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAckB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU3B,OAAQqC,e,GA9CPZ,aCNHiB,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.6762f16b.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='fds' src={`https://robohash.org/${id}?size=150x150`} />\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\n\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\trobots.map((robot, i) => {\n\t\t\t\t\treturn(\n\t\t\t\t\t\t<Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email} />\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default CardList;","import React from \"react\";\n\nconst SearchBox = ({ searchChange }) => {\n\treturn(\n\t\t<div className=\"pa2\">\n\t\t\t<input \n\t\t\tclassName=\"pa3 ba b--green bg-lightest-blue\"\n\t\t\ttype=\"search\" \n\t\t\tplaceholder=\"Search here\" \n\t\t\tonChange={searchChange}\n\t\t\t/>\n\n\t\t</div>\n\n\t)\n}\n\nexport default SearchBox;","import React from \"react\";\n\nconst Scroll = (props) => {\n\tconsole.log(props.children);\n\treturn(\n\t\t<div style={{ overflow: \"scroll\", border: \"4px solid black\", height: \"800px\" }}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n\nexport default Scroll;","import React, { Component} from \"react\";\n\n\nclass ErrorBoundry extends Component {\n\n\tconstructor(props) {\n\t\tsuper();\n\t\tthis.state = { hasError:false }\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({ hasError: true })\n\t}\n\n\trender () {\n\t\tif (this.state.hasError === false) {\n\t\t\treturn(\n\t\t\t\tthis.props.children\n\t\t\t)\t\n\t\t} else {\n\t\t\treturn <h1>Hellooo</h1>\n\t\t}\n\t\t\n\t}\n}\n\n\n\n\nexport default ErrorBoundry;","import React, { Component } from \"react\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport \"./App.css\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundry from \"../components/ErrorBoundry\";\n\n// const App = () => {\n// \treturn(\n// \t\t<div className=\"tc\">\n// \t\t\t<h1>Robofriends</h1>\n// \t\t\t<SearchBox />\n// \t\t\t<CardList robots={robots} />\n// \t\t</div>\n \n\n// \t);\n// }\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: '', \n\t\t}\n\t}\n\n\tonSearchChange = (event) =>  {\n\t\tthis.setState({ searchfield: event.target.value });\n\t\tconsole.log(event.target.value);\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots: users }));\n\t}\n\n\trender() {\n\t\t//Este tambÃ©m funciona, porque nunca usamos o state de robos, usamos sempre o \n\t\t//filteredRobot.\n\t\t// const filteredRobots = robots.filter(robot => {\n\t\t// \treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\n\t\t// })\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\n\t\t})\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn(\n\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t<h1 className=\"f1\">Robofriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<h1>Loading</h1>\n\t\t\t\t</div>\n\t\t\t);\n\t\t} else {\n\t\t\treturn(\n\t\t\t\t<div className=\"tc\">\n\t\t\t\t\t<h1 className=\"f1\">Robofriends</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t\t<CardList robots={filteredRobots} />\n\t\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t);\t\n\t\t}\n\t\t\n\t}\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./containers/App.js\";\nimport 'tachyons';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}